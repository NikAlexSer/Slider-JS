var Slider=function(n){function t(){clearInterval(o),I=(new Date).getTime(),o=setInterval(function(){a(1)},C)}function e(){l=u.length,s=$(".js-content-holder img").width(),m.css({width:s*l,marginLeft:-s}),u.last().prependTo(m)}function a(n){$(".on").removeClass("on"),m.add(f).addClass("animated"),p=0,h=s,1===n?(g=(new Date).getTime()-I,_=g/C,v=(h-p)*_+p,i=+u.data("number"),m.css({left:v}),f.eq(i).addClass("on"),$(".content-holder li:first-child").appendTo(m),m.css({left:0})):(j--,j===-1&&(j=l-1),m.css({left:-s}),i=+u.eq(j).data("number"),f.eq(i).addClass("on")),t()}function d(){c.on("click",function(){a(1)}),r.on("click",function(){a()}),u.add(r).add(c).add(f).on("mouseenter",function(){clearInterval(o)}),u.add(r).add(c).on("mouseleave",function(){t()}),f.on("click",function(){j=$(this).index()-1,clearInterval(o),a(1)})}var i,l,o,s,c,r,u,f,m,p,h,v,I,_,g,j=-1,C=1e3,T=function(){var n,t,e,a;return{sd_templateInit:function(){n=$("#slider-template").html(),t=Handlebars.compile(n)},sd_templateInsertData:function(n){e={slidesTemp:n},a=t(e)},sd_templateBuild:function(){$("body").append(a)}}}();this.init=function(){T.sd_templateInit()},this.render=function(){T.sd_templateInsertData(n),T.sd_templateBuild(),c=$(".control-next"),r=$(".control-prev"),u=$(".js-content-holder li"),m=$(".js-content-holder"),f=$(".js-nav span"),$(".js-nav span:first-child").addClass("on"),e(),d(),t()}};
//# sourceMappingURL=data:application/json;base64,
