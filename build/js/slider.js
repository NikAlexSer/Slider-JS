var Slider=function(t){var e=function(){var t,e,n,o;return{sd_templateInit:function(){t=$("#slider-template").html(),e=Handlebars.compile(t)},sd_templateInsertData:function(t){n={slidesTemp:t},o=e(n)},sd_templateBuild:function(){$("body").append(o)}}}();this.init=function(){e.sd_templateInit()},this.render=function(){e.sd_templateInsertData(t),e.sd_templateBuild(),n._enterWidth();setInterval(function(){n._moveSlide(1)},1e3);$(".control-next").on("click",function(){n._moveSlide(1)}),$(".control-prev").on("click",function(){n._moveSlide()}),$(".nav").first().addClass("on")};var n=function(){var t,e,n=0;return{_enterWidth:function(){t=$(".content-holder li").length,e=$(".slider li img").width(),$(".content-holder").css({width:e*t}),console.log($(".content-holder").width()),console.log($(".content-holder li").length)},_moveSlide:function(o){1==o?(n++,n==t&&(n=0),$(".content-holder").css({left:-(e*n)})):(n--,n==-1&&(n=t-1),$(".content-holder").css({left:-(e*n)}))}}}()};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNsaWRlci5qcyJdLCJuYW1lcyI6WyJTbGlkZXIiLCJhcnJheVNsaWRlcyIsImJ1aWxkU2xpZGVyIiwic291cmNlU2xpZGVzIiwidGVtcGxhdGVTbGlkZXMiLCJjb250ZXh0U2xpZGVzIiwiaHRtbFNsaWRlcyIsInNkX3RlbXBsYXRlSW5pdCIsIiQiLCJodG1sIiwiSGFuZGxlYmFycyIsImNvbXBpbGUiLCJzZF90ZW1wbGF0ZUluc2VydERhdGEiLCJzbGlkZXNUZW1wIiwic2RfdGVtcGxhdGVCdWlsZCIsImFwcGVuZCIsInRoaXMiLCJpbml0IiwicmVuZGVyIiwic2xpZGVyQ29udHJvbCIsIl9lbnRlcldpZHRoIiwic2V0SW50ZXJ2YWwiLCJfbW92ZVNsaWRlIiwib24iLCJmaXJzdCIsImFkZENsYXNzIiwidG90YWxTbGlkZXMiLCJzbGlkZXJXaWR0aCIsInBvcyIsImxlbmd0aCIsIndpZHRoIiwiY3NzIiwiY29uc29sZSIsImxvZyIsImRpcmVjdGlvbiIsImxlZnQiXSwibWFwcGluZ3MiOiJBQUFBLEdBQUlBLFFBQVMsU0FBU0MsR0FDbEIsR0FBSUMsR0FBZSxXQUNmLEdBQUlDLEdBQ0FDLEVBQ0FDLEVBQ0FDLENBQ0osUUFDSUMsZ0JBQWlCLFdBQ2JKLEVBQWlCSyxFQUFFLG9CQUFvQkMsT0FDdkNMLEVBQWlCTSxXQUFXQyxRQUFRUixJQUV4Q1Msc0JBQXVCLFNBQVNYLEdBQzVCSSxHQUFpQlEsV0FBWVosR0FDN0JLLEVBQWFGLEVBQWVDLElBRWhDUyxpQkFBa0IsV0FDZE4sRUFBRSxRQUFRTyxPQUFPVCxPQUk3QlUsTUFBS0MsS0FBTyxXQUNSZixFQUFZSyxtQkFFaEJTLEtBQUtFLE9BQVMsV0FDVmhCLEVBQVlVLHNCQUFzQlgsR0FDbENDLEVBQVlZLG1CQUNaSyxFQUFjQyxhQUNHQyxhQUFZLFdBQ3pCRixFQUFjRyxXQUFXLElBQzFCLElBQ0hkLEdBQUUsaUJBQWlCZSxHQUFHLFFBQVMsV0FDM0JKLEVBQWNHLFdBQVcsS0FFN0JkLEVBQUUsaUJBQWlCZSxHQUFHLFFBQVMsV0FDM0JKLEVBQWNHLGVBRWxCZCxFQUFFLFFBQVFnQixRQUFRQyxTQUFTLE1BRS9CLElBQUlOLEdBQWlCLFdBQ2pCLEdBQ0lPLEdBQ0FDLEVBRkFDLEVBQU0sQ0FHVixRQUNJUixZQUFhLFdBQ1RNLEVBQWNsQixFQUFFLHNCQUFzQnFCLE9BQ3RDRixFQUFjbkIsRUFBRSxrQkFBa0JzQixRQUNsQ3RCLEVBQUUsbUJBQW1CdUIsS0FBS0QsTUFBT0gsRUFBY0QsSUFDL0NNLFFBQVFDLElBQUt6QixFQUFFLG1CQUFtQnNCLFNBQ2xDRSxRQUFRQyxJQUFJekIsRUFBRSxzQkFBc0JxQixTQUV4Q1AsV0FBWSxTQUFTWSxHQUNBLEdBQWJBLEdBQ0FOLElBQ0lBLEdBQU9GLElBQ1BFLEVBQU0sR0FFVnBCLEVBQUUsbUJBQW1CdUIsS0FBS0ksT0FBUVIsRUFBY0MsT0FJaERBLElBQ0lBLElBQU8sSUFDUEEsRUFBTUYsRUFBYyxHQUV4QmxCLEVBQUUsbUJBQW1CdUIsS0FBS0ksT0FBUVIsRUFBY0MiLCJmaWxlIjoic2xpZGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIFNsaWRlciA9IGZ1bmN0aW9uKGFycmF5U2xpZGVzKSB7XG4gICAgdmFyIGJ1aWxkU2xpZGVyID0gKGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgc291cmNlU2xpZGVzLFxuICAgICAgICAgICAgdGVtcGxhdGVTbGlkZXMsXG4gICAgICAgICAgICBjb250ZXh0U2xpZGVzLFxuICAgICAgICAgICAgaHRtbFNsaWRlcztcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHNkX3RlbXBsYXRlSW5pdDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgc291cmNlU2xpZGVzICAgPSAkKFwiI3NsaWRlci10ZW1wbGF0ZVwiKS5odG1sKCk7XG4gICAgICAgICAgICAgICAgdGVtcGxhdGVTbGlkZXMgPSBIYW5kbGViYXJzLmNvbXBpbGUoc291cmNlU2xpZGVzKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzZF90ZW1wbGF0ZUluc2VydERhdGE6IGZ1bmN0aW9uKGFycmF5U2xpZGVzKSB7XG4gICAgICAgICAgICAgICAgY29udGV4dFNsaWRlcyA9IHtzbGlkZXNUZW1wOiBhcnJheVNsaWRlc307XG4gICAgICAgICAgICAgICAgaHRtbFNsaWRlcyA9IHRlbXBsYXRlU2xpZGVzKGNvbnRleHRTbGlkZXMpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHNkX3RlbXBsYXRlQnVpbGQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICAgICQoJ2JvZHknKS5hcHBlbmQoaHRtbFNsaWRlcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgfSgpKTsgLy/QvNC+0LTRg9C70YxcbiAgICB0aGlzLmluaXQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgYnVpbGRTbGlkZXIuc2RfdGVtcGxhdGVJbml0KCk7XG4gICAgfTtcbiAgICB0aGlzLnJlbmRlciA9IGZ1bmN0aW9uKCkge1xuICAgICAgICBidWlsZFNsaWRlci5zZF90ZW1wbGF0ZUluc2VydERhdGEoYXJyYXlTbGlkZXMpO1xuICAgICAgICBidWlsZFNsaWRlci5zZF90ZW1wbGF0ZUJ1aWxkKCk7XG4gICAgICAgIHNsaWRlckNvbnRyb2wuX2VudGVyV2lkdGgoKTtcbiAgICAgICAgdmFyIGF1dG9TbGlkZXIgPSBzZXRJbnRlcnZhbChmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHNsaWRlckNvbnRyb2wuX21vdmVTbGlkZSgxKTtcbiAgICAgICAgfSwgMTAwMCk7XG4gICAgICAgICQoJy5jb250cm9sLW5leHQnKS5vbignY2xpY2snLCAoZnVuY3Rpb24oKXtcbiAgICAgICAgICAgIHNsaWRlckNvbnRyb2wuX21vdmVTbGlkZSgxKTtcbiAgICAgICAgfSkpO1xuICAgICAgICAkKCcuY29udHJvbC1wcmV2Jykub24oJ2NsaWNrJywgKGZ1bmN0aW9uKCl7XG4gICAgICAgICAgICBzbGlkZXJDb250cm9sLl9tb3ZlU2xpZGUoKTtcbiAgICAgICAgfSkpO1xuICAgICAgICAkKCcubmF2JykuZmlyc3QoKS5hZGRDbGFzcyhcIm9uXCIpO1xuICAgIH07XG4gICAgdmFyIHNsaWRlckNvbnRyb2wgPSAoZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBwb3MgPSAwLFxuICAgICAgICAgICAgdG90YWxTbGlkZXMsXG4gICAgICAgICAgICBzbGlkZXJXaWR0aDtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIF9lbnRlcldpZHRoOiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgdG90YWxTbGlkZXMgPSAkKCcuY29udGVudC1ob2xkZXIgbGknKS5sZW5ndGg7XG4gICAgICAgICAgICAgICAgc2xpZGVyV2lkdGggPSAkKCcuc2xpZGVyIGxpIGltZycpLndpZHRoKCk7XG4gICAgICAgICAgICAgICAgJCgnLmNvbnRlbnQtaG9sZGVyJykuY3NzKHt3aWR0aDogc2xpZGVyV2lkdGggKiB0b3RhbFNsaWRlc30pO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCAkKCcuY29udGVudC1ob2xkZXInKS53aWR0aCgpKTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygkKCcuY29udGVudC1ob2xkZXIgbGknKS5sZW5ndGgpO1xuICAgICAgICAgICAgfSwgXG4gICAgICAgICAgICBfbW92ZVNsaWRlOiBmdW5jdGlvbihkaXJlY3Rpb24pIHtcbiAgICAgICAgICAgICAgICBpZiAoZGlyZWN0aW9uID09IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgcG9zKys7XG4gICAgICAgICAgICAgICAgICAgIGlmIChwb3MgPT0gdG90YWxTbGlkZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBvcyA9IDA7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgJCgnLmNvbnRlbnQtaG9sZGVyJykuY3NzKHtsZWZ0OiAtKHNsaWRlcldpZHRoICogcG9zKX0pO1xuICAgICAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHBvcy0tO1xuICAgICAgICAgICAgICAgICAgICBpZiAocG9zID09IC0xKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwb3MgPSB0b3RhbFNsaWRlcyAtIDE7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgJCgnLmNvbnRlbnQtaG9sZGVyJykuY3NzKHtsZWZ0OiAtKHNsaWRlcldpZHRoICogcG9zKX0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9KCkpOyAvL9C80L7QtNGD0LvRjFxuXG4vKlxuICAgICAgICAvL2ZvciBlYWNoIHNsaWRlXG4gICAgICAgICQuZWFjaCgkKCcjc2xpZGVyLXdyYXAgdWwgbGknKSwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAvL3NldCBpdHMgY29sb3JcbiAgICAgICAgICAgIHZhciBjID0gJCh0aGlzKS5hdHRyKFwiZGF0YS1jb2xvclwiKTtcbiAgICAgICAgICAgICQodGhpcykuY3NzKFwiYmFja2dyb3VuZFwiLGMpO1xuXG4gICAgICAgICAgICAvL2NyZWF0ZSBhIHBhZ2luYXRpb25cbiAgICAgICAgICAgIHZhciBsaSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7XG4gICAgICAgICAgICAkKCcjcGFnaW5hdGlvbi13cmFwIHVsJykuYXBwZW5kKGxpKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy9jb3VudGVyXG4gICAgICAgIGNvdW50U2xpZGVzKCk7XG5cbiAgICAgICAgLy9wYWdpbmF0aW9uXG4gICAgICAgIHBhZ2luYXRpb24oKTtcblxuICAgICAgICAvL2hpZGUvc2hvdyBjb250cm9scy9idG5zIHdoZW4gaG92ZXJcbiAgICAgICAgLy9wYXVzZSBhdXRvbWF0aWMgc2xpZGUgd2hlbiBob3ZlclxuICAgICAgICAkKCcjc2xpZGVyLXdyYXAnKS5ob3ZlcihcbiAgICAgICAgICAgIGZ1bmN0aW9uKCl7ICQodGhpcykuYWRkQ2xhc3MoJ2FjdGl2ZScpOyBjbGVhckludGVydmFsKGF1dG9TbGlkZXIpOyB9LFxuICAgICAgICAgICAgZnVuY3Rpb24oKXsgJCh0aGlzKS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7IGF1dG9TbGlkZXIgPSBzZXRJbnRlcnZhbChzbGlkZVJpZ2h0LCAzMDAwKTsgfVxuICAgICAgICApO1xuICAgIC8qKioqKioqKioqKioqKioqKioqKioqKipcbiAgICAgLy8qPiBPUFRJT05BTCBTRVRUSU5HU1xuICAgICAqKioqKioqKioqKioqKioqKioqKioqKiovXG4vKiAgICBmdW5jdGlvbiBjb3VudFNsaWRlcygpe1xuICAgICAgICAkKCcjY291bnRlcicpLmh0bWwocG9zKzEgKyAnIC8gJyArIHRvdGFsU2xpZGVzKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBwYWdpbmF0aW9uKCl7XG4gICAgICAgICQoJyNwYWdpbmF0aW9uLXdyYXAgdWwgbGknKS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XG4gICAgICAgICQoJyNwYWdpbmF0aW9uLXdyYXAgdWwgbGk6ZXEoJytwb3MrJyknKS5hZGRDbGFzcygnYWN0aXZlJyk7XG4gICAgfSovXG59OyJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
