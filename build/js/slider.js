var Slider=function(t){var e=function(){var t,e,n,o;return{sd_templateInit:function(){t=$("#slider-template").html(),e=Handlebars.compile(t)},sd_templateInsertData:function(t){n={slidesTemp:t},o=e(n)},sd_templateBuild:function(){$("body").append(o)}}}();this.init=function(){e.sd_templateInit()},this.render=function(){e.sd_templateInsertData(t),e.sd_templateBuild(),n._enterWidth();setInterval(function(){n._moveSlide(1)},1e3);$(".control-next").on("click",function(){n._moveSlide(1)}),$(".control-prev").on("click",function(){n._moveSlide()})};var n=function(){var t,e,n=0;return{_enterWidth:function(){t=$(".content-holder li").length,e=$(".slider li img").width(),$(".content-holder").css({width:e*t}),console.log($(".content-holder").width()),console.log($(".content-holder li").length)},_moveSlide:function(o){1==o?(n++,n==t&&(n=0),$(".content-holder").css({left:-(e*n)})):(n--,n==-1&&(n=t-1),$(".content-holder").css({left:-(e*n)}))}}}()};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNsaWRlci5qcyJdLCJuYW1lcyI6WyJTbGlkZXIiLCJhcnJheVNsaWRlcyIsImJ1aWxkU2xpZGVyIiwic291cmNlU2xpZGVzIiwidGVtcGxhdGVTbGlkZXMiLCJjb250ZXh0U2xpZGVzIiwiaHRtbFNsaWRlcyIsInNkX3RlbXBsYXRlSW5pdCIsIiQiLCJodG1sIiwiSGFuZGxlYmFycyIsImNvbXBpbGUiLCJzZF90ZW1wbGF0ZUluc2VydERhdGEiLCJzbGlkZXNUZW1wIiwic2RfdGVtcGxhdGVCdWlsZCIsImFwcGVuZCIsInRoaXMiLCJpbml0IiwicmVuZGVyIiwic2xpZGVyQ29udHJvbCIsIl9lbnRlcldpZHRoIiwic2V0SW50ZXJ2YWwiLCJfbW92ZVNsaWRlIiwib24iLCJ0b3RhbFNsaWRlcyIsInNsaWRlcldpZHRoIiwicG9zIiwibGVuZ3RoIiwid2lkdGgiLCJjc3MiLCJjb25zb2xlIiwibG9nIiwiZGlyZWN0aW9uIiwibGVmdCJdLCJtYXBwaW5ncyI6IkFBQUEsR0FBSUEsUUFBUyxTQUFTQyxHQUNsQixHQUFJQyxHQUFlLFdBQ2YsR0FBSUMsR0FDQUMsRUFDQUMsRUFDQUMsQ0FDSixRQUNJQyxnQkFBaUIsV0FDYkosRUFBaUJLLEVBQUUsb0JBQW9CQyxPQUN2Q0wsRUFBaUJNLFdBQVdDLFFBQVFSLElBRXhDUyxzQkFBdUIsU0FBU1gsR0FDNUJJLEdBQWlCUSxXQUFZWixHQUM3QkssRUFBYUYsRUFBZUMsSUFFaENTLGlCQUFrQixXQUNkTixFQUFFLFFBQVFPLE9BQU9ULE9BSTdCVSxNQUFLQyxLQUFPLFdBQ1JmLEVBQVlLLG1CQUVoQlMsS0FBS0UsT0FBUyxXQUNWaEIsRUFBWVUsc0JBQXNCWCxHQUNsQ0MsRUFBWVksbUJBQ1pLLEVBQWNDLGFBQ0dDLGFBQVksV0FDekJGLEVBQWNHLFdBQVcsSUFDMUIsSUFDSGQsR0FBRSxpQkFBaUJlLEdBQUcsUUFBUyxXQUMzQkosRUFBY0csV0FBVyxLQUU3QmQsRUFBRSxpQkFBaUJlLEdBQUcsUUFBUyxXQUMzQkosRUFBY0csZUFHdEIsSUFBSUgsR0FBaUIsV0FDakIsR0FDSUssR0FDQUMsRUFGQUMsRUFBTSxDQUdWLFFBQ0lOLFlBQWEsV0FDVEksRUFBY2hCLEVBQUUsc0JBQXNCbUIsT0FDdENGLEVBQWNqQixFQUFFLGtCQUFrQm9CLFFBQ2xDcEIsRUFBRSxtQkFBbUJxQixLQUFLRCxNQUFPSCxFQUFjRCxJQUMvQ00sUUFBUUMsSUFBS3ZCLEVBQUUsbUJBQW1Cb0IsU0FDbENFLFFBQVFDLElBQUl2QixFQUFFLHNCQUFzQm1CLFNBRXhDTCxXQUFZLFNBQVNVLEdBQ0EsR0FBYkEsR0FDQU4sSUFDSUEsR0FBT0YsSUFDUEUsRUFBTSxHQUVWbEIsRUFBRSxtQkFBbUJxQixLQUFLSSxPQUFRUixFQUFjQyxPQUloREEsSUFDSUEsSUFBTyxJQUNQQSxFQUFNRixFQUFjLEdBRXhCaEIsRUFBRSxtQkFBbUJxQixLQUFLSSxPQUFRUixFQUFjQyIsImZpbGUiOiJzbGlkZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgU2xpZGVyID0gZnVuY3Rpb24oYXJyYXlTbGlkZXMpIHtcbiAgICB2YXIgYnVpbGRTbGlkZXIgPSAoZnVuY3Rpb24oKSB7XG4gICAgICAgIHZhciBzb3VyY2VTbGlkZXMsXG4gICAgICAgICAgICB0ZW1wbGF0ZVNsaWRlcyxcbiAgICAgICAgICAgIGNvbnRleHRTbGlkZXMsXG4gICAgICAgICAgICBodG1sU2xpZGVzO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgc2RfdGVtcGxhdGVJbml0OiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgICBzb3VyY2VTbGlkZXMgICA9ICQoXCIjc2xpZGVyLXRlbXBsYXRlXCIpLmh0bWwoKTtcbiAgICAgICAgICAgICAgICB0ZW1wbGF0ZVNsaWRlcyA9IEhhbmRsZWJhcnMuY29tcGlsZShzb3VyY2VTbGlkZXMpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHNkX3RlbXBsYXRlSW5zZXJ0RGF0YTogZnVuY3Rpb24oYXJyYXlTbGlkZXMpIHtcbiAgICAgICAgICAgICAgICBjb250ZXh0U2xpZGVzID0ge3NsaWRlc1RlbXA6IGFycmF5U2xpZGVzfTtcbiAgICAgICAgICAgICAgICBodG1sU2xpZGVzID0gdGVtcGxhdGVTbGlkZXMoY29udGV4dFNsaWRlcyk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc2RfdGVtcGxhdGVCdWlsZDogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgJCgnYm9keScpLmFwcGVuZChodG1sU2xpZGVzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9KCkpOyAvL9C80L7QtNGD0LvRjFxuICAgIHRoaXMuaW5pdCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICBidWlsZFNsaWRlci5zZF90ZW1wbGF0ZUluaXQoKTtcbiAgICB9O1xuICAgIHRoaXMucmVuZGVyID0gZnVuY3Rpb24oKSB7XG4gICAgICAgIGJ1aWxkU2xpZGVyLnNkX3RlbXBsYXRlSW5zZXJ0RGF0YShhcnJheVNsaWRlcyk7XG4gICAgICAgIGJ1aWxkU2xpZGVyLnNkX3RlbXBsYXRlQnVpbGQoKTtcbiAgICAgICAgc2xpZGVyQ29udHJvbC5fZW50ZXJXaWR0aCgpO1xuICAgICAgICB2YXIgYXV0b1NsaWRlciA9IHNldEludGVydmFsKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgc2xpZGVyQ29udHJvbC5fbW92ZVNsaWRlKDEpO1xuICAgICAgICB9LCAxMDAwKTtcbiAgICAgICAgJCgnLmNvbnRyb2wtbmV4dCcpLm9uKCdjbGljaycsIChmdW5jdGlvbigpe1xuICAgICAgICAgICAgc2xpZGVyQ29udHJvbC5fbW92ZVNsaWRlKDEpO1xuICAgICAgICB9KSk7XG4gICAgICAgICQoJy5jb250cm9sLXByZXYnKS5vbignY2xpY2snLCAoZnVuY3Rpb24oKXtcbiAgICAgICAgICAgIHNsaWRlckNvbnRyb2wuX21vdmVTbGlkZSgpO1xuICAgICAgICB9KSk7XG4gICAgfTtcbiAgICB2YXIgc2xpZGVyQ29udHJvbCA9IChmdW5jdGlvbigpIHtcbiAgICAgICAgdmFyIHBvcyA9IDAsXG4gICAgICAgICAgICB0b3RhbFNsaWRlcyxcbiAgICAgICAgICAgIHNsaWRlcldpZHRoO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgX2VudGVyV2lkdGg6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICB0b3RhbFNsaWRlcyA9ICQoJy5jb250ZW50LWhvbGRlciBsaScpLmxlbmd0aDtcbiAgICAgICAgICAgICAgICBzbGlkZXJXaWR0aCA9ICQoJy5zbGlkZXIgbGkgaW1nJykud2lkdGgoKTtcbiAgICAgICAgICAgICAgICAkKCcuY29udGVudC1ob2xkZXInKS5jc3Moe3dpZHRoOiBzbGlkZXJXaWR0aCAqIHRvdGFsU2xpZGVzfSk7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coICQoJy5jb250ZW50LWhvbGRlcicpLndpZHRoKCkpO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCQoJy5jb250ZW50LWhvbGRlciBsaScpLmxlbmd0aCk7XG4gICAgICAgICAgICB9LCBcbiAgICAgICAgICAgIF9tb3ZlU2xpZGU6IGZ1bmN0aW9uKGRpcmVjdGlvbikge1xuICAgICAgICAgICAgICAgIGlmIChkaXJlY3Rpb24gPT0gMSkge1xuICAgICAgICAgICAgICAgICAgICBwb3MrKztcbiAgICAgICAgICAgICAgICAgICAgaWYgKHBvcyA9PSB0b3RhbFNsaWRlcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgcG9zID0gMDtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAkKCcuY29udGVudC1ob2xkZXInKS5jc3Moe2xlZnQ6IC0oc2xpZGVyV2lkdGggKiBwb3MpfSk7XG4gICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgcG9zLS07XG4gICAgICAgICAgICAgICAgICAgIGlmIChwb3MgPT0gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBvcyA9IHRvdGFsU2xpZGVzIC0gMTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAkKCcuY29udGVudC1ob2xkZXInKS5jc3Moe2xlZnQ6IC0oc2xpZGVyV2lkdGggKiBwb3MpfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH0oKSk7IC8v0LzQvtC00YPQu9GMXG5cbi8qXG4gICAgICAgIC8vZm9yIGVhY2ggc2xpZGVcbiAgICAgICAgJC5lYWNoKCQoJyNzbGlkZXItd3JhcCB1bCBsaScpLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIC8vc2V0IGl0cyBjb2xvclxuICAgICAgICAgICAgdmFyIGMgPSAkKHRoaXMpLmF0dHIoXCJkYXRhLWNvbG9yXCIpO1xuICAgICAgICAgICAgJCh0aGlzKS5jc3MoXCJiYWNrZ3JvdW5kXCIsYyk7XG5cbiAgICAgICAgICAgIC8vY3JlYXRlIGEgcGFnaW5hdGlvblxuICAgICAgICAgICAgdmFyIGxpID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGknKTtcbiAgICAgICAgICAgICQoJyNwYWdpbmF0aW9uLXdyYXAgdWwnKS5hcHBlbmQobGkpO1xuICAgICAgICB9KTtcblxuICAgICAgICAvL2NvdW50ZXJcbiAgICAgICAgY291bnRTbGlkZXMoKTtcblxuICAgICAgICAvL3BhZ2luYXRpb25cbiAgICAgICAgcGFnaW5hdGlvbigpO1xuXG4gICAgICAgIC8vaGlkZS9zaG93IGNvbnRyb2xzL2J0bnMgd2hlbiBob3ZlclxuICAgICAgICAvL3BhdXNlIGF1dG9tYXRpYyBzbGlkZSB3aGVuIGhvdmVyXG4gICAgICAgICQoJyNzbGlkZXItd3JhcCcpLmhvdmVyKFxuICAgICAgICAgICAgZnVuY3Rpb24oKXsgJCh0aGlzKS5hZGRDbGFzcygnYWN0aXZlJyk7IGNsZWFySW50ZXJ2YWwoYXV0b1NsaWRlcik7IH0sXG4gICAgICAgICAgICBmdW5jdGlvbigpeyAkKHRoaXMpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTsgYXV0b1NsaWRlciA9IHNldEludGVydmFsKHNsaWRlUmlnaHQsIDMwMDApOyB9XG4gICAgICAgICk7XG4gICAgLyoqKioqKioqKioqKioqKioqKioqKioqKlxuICAgICAvLyo+IE9QVElPTkFMIFNFVFRJTkdTXG4gICAgICoqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qICAgIGZ1bmN0aW9uIGNvdW50U2xpZGVzKCl7XG4gICAgICAgICQoJyNjb3VudGVyJykuaHRtbChwb3MrMSArICcgLyAnICsgdG90YWxTbGlkZXMpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHBhZ2luYXRpb24oKXtcbiAgICAgICAgJCgnI3BhZ2luYXRpb24td3JhcCB1bCBsaScpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcbiAgICAgICAgJCgnI3BhZ2luYXRpb24td3JhcCB1bCBsaTplcSgnK3BvcysnKScpLmFkZENsYXNzKCdhY3RpdmUnKTtcbiAgICB9Ki9cbn07Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
