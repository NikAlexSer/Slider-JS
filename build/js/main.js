function sendValues(n){var e=new Slider(n);e.init(),e.render()}function main(){$('.input-form input[name="button"]').click(function(){var n=new Preview;n.init(),n.render()})}$(document).ready(function(){main()});var Preview=function(){function n(){d=$("#preview-template").html(),p=Handlebars.compile(d)}function e(n){f={urls:n},m=p(f)}function i(){$("body").append(m)}function t(){var n=$("#arrayURL").val().split(",");return n.forEach(function(n,e,i){i[e]=i[e].replace(/["\n \u005B\u005D]/g,"")}),n}function o(n,e){n.forEach(function(n,i,t){w[i]={img:t[i],com:e[i]}})}function r(){h.splice($(this).parent().index(),1),j.render()}function c(){$(".comment").each(function(n){x[n]=$(".comment")[n].value}),s.hide(),o(h,x),sendValues(w)}function a(){s=$(".js-slider-preview"),u=$('.js-slider-preview input[value="Удалить"]'),l=$('.js-slider-preview input[value="Сохранить"]'),u.on("click",r),l.on("click",c)}var s,u,l,d,p,f,m,v=[],h=[],x=[],w=[],j=this;this.init=function(){h=v=t(),$(".input-form").hide(),n()},this.render=function(){$(".js-slider-preview").remove(),e(h),i(),a()}},Slider=function(n){function e(){j=$("#slider-template").html(),b=Handlebars.compile(j)}function i(n){k={slidesTemp:n},g=b(k)}function t(){$("body").append(g)}function o(){f=$(".control-next"),m=$(".control-prev"),v=$(".js-content-holder li"),w=$(".js-slider"),x=$(".js-content-holder"),h=$(".js-nav span"),h.eq(C).addClass("on"),d=v.first(),p=v.last(),E=!1,s=temp=v.length,l=$(".js-content-holder img").width(),x.css({width:l*s})}function r(){f.on("click",function(){a(1)}),m.on("click",function(){a(-1)}),w.on("mouseenter",function(){clearInterval(u)}).on("mouseleave",function(){c()})}function c(){u=setInterval(function(){a(1)},I)}function a(n){if(!E)switch($(".on").removeClass("on"),E=!0,C+=n,h.eq(C).addClass("on"),console.log("Ahtung!",C),C){case-1:h.eq(s-1).addClass("on"),p.prependTo(x),x.transition({x:(C+2)*-l+"px"},0),x.transition({x:(C+1)*-l+"px"},300,"easeInOutExpo",function(){C=s-1,p.appendTo(x),x.transition({x:C*-l+"px"},0),E=!1});break;case s:h.eq(0).addClass("on"),d.appendTo(x),x.transition({x:(C-2)*-l+"px"},0),x.transition({x:(C-1)*-l+"px"},300,"easeInOutExpo",function(){C=0,d.prependTo(x),x.transition({x:C*-l+"px"},0),E=!1});break;default:x.transition({x:C*-l+"px"},300,"easeInOutExpo",function(){E=!1})}}var s,u,l,d,p,f,m,v,h,x,w,j,b,k,g,C=0,E=!1,I=1e3;this.init=function(){e()},this.render=function(){i(n),t(),o(),r(),c()}};
//# sourceMappingURL=data:application/json;base64,
